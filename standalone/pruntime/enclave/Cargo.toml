[package]
name = "EnclaveApp"
version = "0.0.1"
authors = ["jasl"]
edition = "2018"
resolver = "2"

[lib]
name = "enclaveapp"
crate-type = ["staticlib"]

[target.'cfg(not(target_env = "sgx"))'.dependencies]
sgx_backtrace   = { rev = "v1.1.3", git = "https://github.com/apache/teaclave-sgx-sdk.git" }
sgx_types       = { rev = "v1.1.3", git = "https://github.com/apache/teaclave-sgx-sdk.git" }
sgx_tstd        = { rev = "v1.1.3", git = "https://github.com/apache/teaclave-sgx-sdk.git", features = ["net", "backtrace"] }
sgx_tcrypto     = { rev = "v1.1.3", git = "https://github.com/apache/teaclave-sgx-sdk.git" }
sgx_tse         = { rev = "v1.1.3", git = "https://github.com/apache/teaclave-sgx-sdk.git" }
sgx_trts        = { rev = "v1.1.3", git = "https://github.com/apache/teaclave-sgx-sdk.git" }
sgx_tseal       = { rev = "v1.1.3", git = "https://github.com/apache/teaclave-sgx-sdk.git" }
sgx_rand        = { rev = "v1.1.3", git = "https://github.com/apache/teaclave-sgx-sdk.git" }
sgx_rand_derive = { rev = "v1.1.3", git = "https://github.com/apache/teaclave-sgx-sdk.git" }

[dependencies]
chrono      = { git = "https://github.com/mesalock-linux/chrono-sgx" }
webpki      = { git = "https://github.com/mesalock-linux/webpki", branch = "mesalock_sgx" }
base64      = { git = "https://github.com/mesalock-linux/rust-base64-sgx" }
yasna       = { git = "https://github.com/mesalock-linux/yasna.rs-sgx", features = ["bit-vec", "num-bigint", "chrono"] }
num-bigint  = { git = "https://github.com/mesalock-linux/num-bigint-sgx" }
ring        = { git = "https://github.com/mesalock-linux/ring-sgx", tag = "v0.16.5" }
rust-crypto = { git = "https://github.com/mesalock-linux/rust-crypto-sgx" }
rustls      = { git = "https://github.com/mesalock-linux/rustls", branch = "mesalock_sgx", features = ["dangerous_configuration"] }
webpki-roots= { git = "https://github.com/mesalock-linux/webpki-roots", branch = "mesalock_sgx" }
rand        = { git = "https://github.com/mesalock-linux/rand-sgx", tag = "v0.7.3_sgx1.1.3", features = ["small_rng"] }
regex       = { git = "https://github.com/mesalock-linux/regex-sgx" }
http_req    = { git = "https://github.com/mesalock-linux/http_req-sgx", features = ["rust-tls"]}
bitcoin     = { git = "https://github.com/Phala-Network/rust-bitcoin", features = ["use-serde"]}
bitcoin_hashes = { branch = "0.9.1-sgx", git = "https://github.com/Phala-Network/bitcoin_hashes" }

serde = { git = "https://github.com/mesalock-linux/serde-sgx.git", features = ["derive"] }
serde_json = { git = "https://github.com/mesalock-linux/serde-json-sgx.git" }
serde_cbor = { git = "https://github.com/mesalock-linux/cbor-sgx.git" }

hex = { version = "0.4", default-features = false, features = ["alloc"] }
hex-literal = "0.3"
anyhow = { version = "1.0", default-features = false }
bit-vec = { version = "*", default-features = false }
itertools = { version = "0.8", default-features = false }
lazy_static = { version = "*", default-features = false, features = ["spin_no_std"] }

trie-storage = { path = "../../../crates/trie-storage", default-features = false, features = ["sgx"] }
phala-mq = { path = "../../../crates/phala-mq" }

phala-crypto = { path = "../../../crates/crypto" }

sp-io                = { path = "../../../substrate/primitives/io", default-features = false, features = ["disable_panic_handler", "disable_oom", "disable_allocator"] }
sp-runtime-interface = { path = "../../../substrate/primitives/runtime-interface", default-features = false, features = ["disable_target_static_assertions"] }
sp-runtime           = { path = "../../../substrate/primitives/runtime", default-features = false }
parity-scale-codec   = { package = "parity-scale-codec", version = "2.0.0", default-features = false, features = ["derive", "full"] }
scopeguard   = { version = "1.1", default-features = false }

# Phala specific
runtime = { path = "../../runtime", default-features = false, package = "phala-node-runtime", features = ["native-nostd"] }
phala-pallets = { path = "../../../pallets/phala", default-features = false }
pallet-kitties = { path = "../../../pallets/kitties", default-features = false }
bridge-transfer = { package = "pallet-bridge-transfer", path = "../../../pallets/bridge_transfer", default-features = false }
phala-types = { path = "../../../common/types", default-features = false, features = ["enable_serde", "pruntime", "sgx"] }
enclave-api = { path = "../enclave-api", default-features = false, features = ["sgx"] }

csv-core = { version = "0.1.10", default-features = false }

# for light_validation
derive_more = "0.99.0"
log = { git = "https://github.com/mesalock-linux/log-sgx" }
env_logger = { git = "https://github.com/mesalock-linux/env_logger-sgx" }
hash-db = { version = "0.15.2", default-features = false }
num = { package = "num-traits", version = "0.2", default-features = false }
finality-grandpa = { version = "0.14", default-features = false, features = ["derive-codec"] }
trie = { package = "sp-trie", path = "../../../substrate/primitives/trie", default-features = false }
frame-system = { package = "frame-system", path = "../../../substrate/frame/system", default-features = false }
sp-finality-grandpa = { package = "sp-finality-grandpa", path = "../../../substrate/primitives/finality-grandpa", default-features = false }
sp-application-crypto = { package = "sp-application-crypto", path = "../../../substrate/primitives/application-crypto", default-features = false, features = ["full_crypto"] }
sp-core = { package = "sp-core", path = "../../../substrate/primitives/core", default-features = false, features = ["full_crypto"]}

fixed = "1.9.0"
fixed-sqrt = "0.2.4"

# for diem
bcs = { path = "../../../diem/vendor/bcs", version = "0.1.2" }
diem-types = { path = "../../../diem/types", version = "0.1.0" }
diem-crypto = { path = "../../../diem/crypto/crypto", version = "0.1.0" }
move-core-types = { path = "../../../diem/language/move-core/types", version = "0.1.0" }
transaction-builder = { path = "../../../diem/language/transaction-builder", version = "0.1.0"}

# Ink! Runtime
pink = { git = "https://github.com/Phala-Network/pink-sgx" }

[features]
default = [
  "sp-runtime-interface/disable_target_static_assertions",
  "sp-io/disable_panic_handler",
  "sp-io/disable_oom",
  "sp-io/disable_allocator",
  "runtime/native-nostd"
]
tests = []

[patch.crates-io]
rand = { git = "https://github.com/mesalock-linux/rand-sgx", tag = "v0.7.3_sgx1.1.3", default-features = false }
rand_core = { git = "https://github.com/mesalock-linux/rand-sgx", tag = "v0.7.3_sgx1.1.3", default-features = false }
getrandom = { path = "../../../getrandom-sgx" }

[patch.'https://github.com/apache/teaclave-sgx-sdk.git']
sgx_alloc = { path = "../../../teaclave-sgx-sdk/sgx_alloc" }
sgx_backtrace = { path = "../../../teaclave-sgx-sdk/sgx_backtrace" }
sgx_backtrace_sys = { path = "../../../teaclave-sgx-sdk/sgx_backtrace_sys" }
sgx_build_helper = { path = "../../../teaclave-sgx-sdk/sgx_build_helper" }
#sgx_cov = { path = "../../../teaclave-sgx-sdk/sgx_cov" }
#sgx_crypto_helper = { path = "../../../teaclave-sgx-sdk/sgx_crypto_helper" }
sgx_demangle = { path = "../../../teaclave-sgx-sdk/sgx_demangle" }
sgx_libc = { path = "../../../teaclave-sgx-sdk/sgx_libc" }
sgx_rand = { path = "../../../teaclave-sgx-sdk/sgx_rand" }
sgx_rand_derive = { path = "../../../teaclave-sgx-sdk/sgx_rand_derive" }
#sgx_serialize = { path = "../../../teaclave-sgx-sdk/sgx_serialize" }
sgx_serialize_derive = { path = "../../../teaclave-sgx-sdk/sgx_serialize_derive" }
sgx_serialize_derive_internals = { path = "../../../teaclave-sgx-sdk/sgx_serialize_derive_internals" }
sgx_tcrypto = { path = "../../../teaclave-sgx-sdk/sgx_tcrypto" }
#sgx_tcrypto_helper = { path = "../../../teaclave-sgx-sdksgx_tcrypto_helper" }
#sgx_tdh = { path = "../../../teaclave-sgx-sdk/sgx_tdh" }
#sgx_tkey_exchange = { path = "../../../teaclave-sgx-sdk/sgx_tkey_exchange" }
sgx_tprotected_fs = { path = "../../../teaclave-sgx-sdk/sgx_tprotected_fs" }
sgx_trts = { path = "../../../teaclave-sgx-sdk/sgx_trts" }
sgx_tse = { path = "../../../teaclave-sgx-sdk/sgx_tse" }
sgx_tseal = { path = "../../../teaclave-sgx-sdk/sgx_tseal" }
sgx_tstd = { path = "../../../teaclave-sgx-sdk/sgx_tstd" }
#sgx_tunittest = { path = "../../../teaclave-sgx-sdk/sgx_tunittest" }
sgx_types = { path = "../../../teaclave-sgx-sdk/sgx_types" }
#sgx_ucrypto = { path = "../../../teaclave-sgx-sdk/sgx_ucrypto" }
sgx_unwind = { path = "../../../teaclave-sgx-sdk/sgx_unwind" }
#sgx_urts = { path = "../../../teaclave-sgx-sdk/sgx_urts" }
